/*
 * This file is generated by jOOQ.
 */
package com.customer.customerApplication.Model.tables.daos;


import com.customer.customerApplication.Model.tables.UserDetails;
import com.customer.customerApplication.Model.tables.records.UserDetailsRecord;

import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDetailsDao extends DAOImpl<UserDetailsRecord, com.customer.customerApplication.Model.tables.pojos.UserDetails, Integer> {

    /**
     * Create a new UserDetailsDao without any configuration
     */
    public UserDetailsDao() {
        super(UserDetails.USER_DETAILS, com.customer.customerApplication.Model.tables.pojos.UserDetails.class);
    }

    /**
     * Create a new UserDetailsDao with an attached configuration
     */
    public UserDetailsDao(Configuration configuration) {
        super(UserDetails.USER_DETAILS, com.customer.customerApplication.Model.tables.pojos.UserDetails.class, configuration);
    }

    @Override
    public Integer getId(com.customer.customerApplication.Model.tables.pojos.UserDetails object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.customer.customerApplication.Model.tables.pojos.UserDetails> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(UserDetails.USER_DETAILS.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.customer.customerApplication.Model.tables.pojos.UserDetails> fetchById(Integer... values) {
        return fetch(UserDetails.USER_DETAILS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.customer.customerApplication.Model.tables.pojos.UserDetails fetchOneById(Integer value) {
        return fetchOne(UserDetails.USER_DETAILS.ID, value);
    }

    /**
     * Fetch records that have <code>cus_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.customer.customerApplication.Model.tables.pojos.UserDetails> fetchRangeOfCusId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(UserDetails.USER_DETAILS.CUS_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cus_id IN (values)</code>
     */
    public List<com.customer.customerApplication.Model.tables.pojos.UserDetails> fetchByCusId(Integer... values) {
        return fetch(UserDetails.USER_DETAILS.CUS_ID, values);
    }

    /**
     * Fetch records that have <code>ord_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.customer.customerApplication.Model.tables.pojos.UserDetails> fetchRangeOfOrdId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(UserDetails.USER_DETAILS.ORD_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ord_id IN (values)</code>
     */
    public List<com.customer.customerApplication.Model.tables.pojos.UserDetails> fetchByOrdId(Integer... values) {
        return fetch(UserDetails.USER_DETAILS.ORD_ID, values);
    }
}

/*
 * This file is generated by jOOQ.
 */
package com.customer.customerApplication.Model.tables.daos;


import com.customer.customerApplication.Model.tables.Orders;
import com.customer.customerApplication.Model.tables.records.OrdersRecord;

import java.util.List;

import javax.annotation.processing.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrdersDao extends DAOImpl<OrdersRecord, com.customer.customerApplication.Model.tables.pojos.Orders, Integer> {

    /**
     * Create a new OrdersDao without any configuration
     */
    public OrdersDao() {
        super(Orders.ORDERS, com.customer.customerApplication.Model.tables.pojos.Orders.class);
    }

    /**
     * Create a new OrdersDao with an attached configuration
     */
    public OrdersDao(Configuration configuration) {
        super(Orders.ORDERS, com.customer.customerApplication.Model.tables.pojos.Orders.class, configuration);
    }

    @Override
    public Integer getId(com.customer.customerApplication.Model.tables.pojos.Orders object) {
        return object.getOrderid();
    }

    /**
     * Fetch records that have <code>orderId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.customer.customerApplication.Model.tables.pojos.Orders> fetchRangeOfOrderid(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Orders.ORDERS.ORDERID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>orderId IN (values)</code>
     */
    public List<com.customer.customerApplication.Model.tables.pojos.Orders> fetchByOrderid(Integer... values) {
        return fetch(Orders.ORDERS.ORDERID, values);
    }

    /**
     * Fetch a unique record that has <code>orderId = value</code>
     */
    public com.customer.customerApplication.Model.tables.pojos.Orders fetchOneByOrderid(Integer value) {
        return fetchOne(Orders.ORDERS.ORDERID, value);
    }

    /**
     * Fetch records that have <code>orderStatus BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.customer.customerApplication.Model.tables.pojos.Orders> fetchRangeOfOrderstatus(String lowerInclusive, String upperInclusive) {
        return fetchRange(Orders.ORDERS.ORDERSTATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>orderStatus IN (values)</code>
     */
    public List<com.customer.customerApplication.Model.tables.pojos.Orders> fetchByOrderstatus(String... values) {
        return fetch(Orders.ORDERS.ORDERSTATUS, values);
    }

    /**
     * Fetch records that have <code>products BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.customer.customerApplication.Model.tables.pojos.Orders> fetchRangeOfProducts(String lowerInclusive, String upperInclusive) {
        return fetchRange(Orders.ORDERS.PRODUCTS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>products IN (values)</code>
     */
    public List<com.customer.customerApplication.Model.tables.pojos.Orders> fetchByProducts(String... values) {
        return fetch(Orders.ORDERS.PRODUCTS, values);
    }
}
